<?php
return [
    /*
    |--------------------------------------------------------------------------
    | Проверка подлинности по умолчанию
    |--------------------------------------------------------------------------
    |
    | Этот параметр управляет аутентификацией по умолчанию "guard" и паролем
    | сбросьте параметры для вашего приложения. Вы можете изменить эти значения по умолчанию
    | по мере необходимости, но они являются идеальным началом для большинства приложений.
    |
    */
    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],
    /*
    |--------------------------------------------------------------------------
    | Средства защиты от аутентификации
    |--------------------------------------------------------------------------
    |
    | Далее вы можете определить все средства аутентификации для своего приложения.
    | Конечно, для вас была определена отличная конфигурация по умолчанию
    | здесь, который использует хранилище сеансов и Eloquentuserprovider.
    |
    | У всех драйверов аутентификации есть поставщик пользователя. Это определяет, как
    | пользователи фактически извлекаются из вашей базы данных или другого хранилища
    | механизмы, используемые этим приложением для сохранения данных вашего пользователя.
    |
    | Поддерживаемый: "session"
    |
    */
    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
 
        'api' => [
            'driver' => 'passport',
            'provider' => 'users',
            'hash' => false,
        ],
    ],
    /*
    |--------------------------------------------------------------------------
    | Поставщики услуг для пользователей
    |--------------------------------------------------------------------------
    |
    | У всех драйверов аутентификации есть поставщик пользователя. Это определяет, как
    | пользователи фактически извлекаются из вашей базы данных или другого хранилища
    | механизмы, используемые этим приложением для сохранения данных вашего пользователя.
    |
    | Если у вас есть несколько пользовательских таблиц или моделей, вы можете настроить несколько
    | источники, которые представляют каждую модель / таблицу. Эти источники могут затем
    | быть назначены любым дополнительным средствам аутентификации, которые вы определили.
    |
    | Поддерживаемый: "database", "eloquent"
    |
    */
    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Domain\Users\Models\User::class,
        ],
        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],
    /*
    |--------------------------------------------------------------------------
    | Сброс паролей
    |--------------------------------------------------------------------------
    |
    | Вы можете указать несколько конфигураций сброса пароля, если у вас есть больше
    | более одной пользовательской таблицы или модели в приложении, и вы хотите иметь
    | отдельные настройки сброса пароля в зависимости от конкретных типов пользователей.
    |
    | Время истечения срока действия - это количество минут, в течение которых каждый токен сброса будет
    | считается действительным. Эта функция безопасности сохраняет токены недолговечными, поэтому
    | у них меньше времени на то, чтобы быть угаданными. Вы можете изменить это по мере необходимости.
    |
    */
    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_resets',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],
    /*
    |--------------------------------------------------------------------------
    | Тайм-аут подтверждения пароля
    |--------------------------------------------------------------------------
    |
    | Здесь вы можете определить количество секунд до подтверждения пароля
    | время ожидания истекает, и пользователю предлагается повторно ввести свой пароль через
    | экран подтверждения. По умолчанию тайм-аут длится три часа.
    |
    */
    'password_timeout' => 10800,
];